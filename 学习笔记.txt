1、movl 代表(move)移动，但实际运行中是以拷贝方式实现，例如:movl %eax,%ebx将eax寄存器中的数据移动到%ebx中,移动完成后两个寄存器中均有该值.
2、常用跳转语句
   |----je若值相等则跳转
   |----jg若第二个值大于第一个值则跳转
   |----jge若第二个值大于等于第一个值则跳转
   |----jl若第二个值小于第一个值则跳转
   |----jle若第二个值小于等于第一个值则跳转
   |----jmp无条件跳转。使用该指令无需跟在比较指令之后
   |______________________________________________________
3、寻址方式(28-29)
  3.1、内存地址引用通用格式(除立即模式外):
       地址或偏移 (%基址寄存器，%索引寄存器,比例因子)
       上述格式所有字段均是可选，计算地址公式为:
       结果地址 = 地址或偏移+%基址或偏移量寄存器+比例因子*%索引寄存器
       其中地址或偏移量及比例因子必须为常量，其余两个必须是寄存器。如果省略任何一项将以0代替该项。
  3.2、寻址方式
         |---------直接寻址
         |---------索引寻址
         |---------间接寻址
         |---------基址寻址
         |---------立即寻址
         |---------寄存器寻址
         |_________________

4、常见寄存器及其作用
  4.1 通用寄存器(x64)
     |------rax
     |------rbx
     |------rcx
     |------rdx
     |------rsi
     |------rdi
     |------rbp
     |------rsp(栈指针,指向当前栈顶)
     |------r8(基址指针,在函数调用过程横指向栈顶，通过偏移量访问当前栈变量)
     |------r9
     |------r10
     |------r11
     |------r12
     |------r13
     |------r14
     |------r15
     |__________
   4.2 指令寄存器:指向CPU即将执行的下一条指令

5、数据存储尺寸
    ___________________________________________________________________________________
   | Byte              |   8-bit      |     1byte       |    db                        |
   | Word              |   16-bit     |     2byte       |    dw                        |
   | Double-word       |   32-bit     |     4byte       |    dd                        |
   | Quadword          |   64-bit     |     8byte       |    dq/ddq(128byte integer)   |
   | Double quadword   |   128-bit    |     16byte      |    dt                        |
   |____________________________________________________|______________________________|

6、程序格式
  6.1 注释内容使用;,例如:;我是注释内容
  6.2 常量使用equ定义,例如 SIZE equ 1000
  6.3 变量定义(section .data)
   6.3.1 定义格式 变量名  数据类型  初始值
   6.3.2 例如
     section .data
      var  dd 10
      var1 dw 5000
      var2 dq 100000000
  6.4 bss变量定义(section bss)
    6.4.1: 定义格式 变量名  数据类型(resType)  初始值
    6.4.2: 可用数据类型
       ______________________________________
      |Declaration                           |
      |--------------------------------------|
      |resb             8-bit variable(s)    |
      |resw             16-bit variable(s)   |
      |resd             32-bit variable(s)   |
      |resq             64-bit variable(s)   |
      |resdq            128-bit variable(s)  |
      |______________________________________|